---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry
  namespace: default
  labels:
    app: docker-registry
spec:
  type: NodePort
  selector:
    app: docker-registry
  ports:
  - name: http
    port: 5000
    targetPort: docker-http
    protocol: TCP
    nodePort: 30500
  - name: auth
    port: 5001
    targetPort: docker-auth
    protocol: TCP
    nodePort: 30501
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: docker-registry
  namespace: default
  labels:
    app: docker-registry
    version: v1
spec:
  selector:
    app: docker-registry
    version: v1
  template:
    metadata:
      labels:
        app: docker-registry
        version: v1
    spec:
      containers:
      - name: docker-registry
        env:
          - name: REGISTRY_HTTP_SECRET
            value: secret
          - name: REGISTRY_HTTP_TLS_CERTIFICATE
            value: /certs/domain.crt
          - name: REGISTRY_HTTP_TLS_KEY
            value: /certs/domain.key
          - name: REGISTRY_AUTH
            value: token
          - name: REGISTRY_AUTH_TOKEN_SERVICE
            value: docker-registry.default.svc.cluster.local
          - name: REGISTRY_AUTH_TOKEN_REALM
            value: http://docker-registry.default.svc.cluster.local:30501/v2/token
          - name: REGISTRY_AUTH_TOKEN_ISSUER
            value: docker-registry.default.svc.cluster.local
          - name: REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE
            value: /certs/server.pem
        image: registry:2.2.1
        ports:
        - containerPort: 5000
          protocol: TCP
          name: docker-http
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      - name: docker-auth
        args:
        - --audience=docker-registry.default.svc.cluster.local
        - --issuer=docker-registry.default.svc.cluster.local
        - --public-key-file=/certs/public.pem
        - --signing-key-file=/certs/private.pem
        - --verbose
        image: jtblin/docker-auth:db74c4f
        ports:
        - containerPort: 5001
          protocol: TCP
          name: docker-auth
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      volumes:
      - name: certs-storage
        secret:
            secretName: docker-registry-certs
